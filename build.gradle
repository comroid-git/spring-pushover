import java.util.concurrent.TimeUnit

plugins {
	id 'java-library'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
}

ext {
	buildId = TimeUnit.MILLISECONDS.toMinutes(System.currentTimeMillis())
}
task tcBuildId {
	doLast {
		println "##teamcity[buildNumber '$buildId']"
	}
}
tasks.named('jar').configure { dependsOn tcBuildId }

group = 'org.comroid'
version = '0.1' + '.' + buildId
sourceCompatibility = '17'

apply from: 'gradle/vars.gradle'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven { url = 'https://maven.comroid.org' }
	mavenCentral()
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allJava

	try {
		archiveClassifier.set 'sources'
	} catch (MissingPropertyException ignored) {
		classifier = "sources"
	}
}

task javadocJar(type: Jar) {
	dependsOn 'javadoc'

	from javadoc.destinationDir

	try {
		archiveClassifier.set 'javadoc'
	} catch (MissingPropertyException ignored) {
		classifier = "javadoc"
	}
}

tasks.withType(Jar).configureEach {
	it.duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

dependencies {
	if (findProject(':api') != null)
		api project(':api')
	else api 'org.comroid:api:1.+'

	// rest
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// pushover
	//implementation 'com.github.ilpersi:pushover-client:1.1.1'

	// config
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// util
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// spring test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

apply from: 'gradle/publishing.gradle'
